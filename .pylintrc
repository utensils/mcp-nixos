[MAIN]
# Specify a score threshold under which the program will exit with error
fail-under=8.0

# Add files or directories to the ignore list
ignore=.git,.venv,__pycache__,build,dist,htmlcov,.mypy_cache,result,website,node_modules

# Use multiple processes to speed up Pylint
jobs=0

# Allow loading of arbitrary C extensions
unsafe-load-any-extension=no

# A comma-separated list of package or module names from where C extensions may be loaded
extension-pkg-allow-list=

[MESSAGES CONTROL]
# Disable specific warnings
disable=
    # Too few public methods
    R0903,
    # Duplicate code
    R0801,
    # Invalid name (we use some single letter vars)
    C0103,
    # Missing module docstring (we have it in __init__.py)
    C0114,
    # Missing class docstring (for simple test classes)
    C0115,
    # Too many arguments
    R0913,
    # Too many local variables
    R0914,
    # Too many branches
    R0912,
    # Too many statements
    R0915,
    # Too many return statements
    R0911,
    # Too many public methods
    R0904,
    # Consider using f-string
    C0209,
    # Unnecessary parens after keyword
    C0325,
    # Import outside toplevel (needed for optional imports)
    C0415,
    # Broad exception caught (we need this for robust error handling)
    W0718,
    # Consider using 'with' for resource-allocating operations
    R1732,
    # Unspecified encoding (we use default UTF-8)
    W1514,
    # Too many lines in module
    C0302,
    # Line too long (handled by black)
    C0301,
    # Missing function or method docstring (for simple test methods)
    C0116,
    # Unused argument (common in test fixtures)
    W0613,
    # Redefined outer name (common in test fixtures)
    W0621,
    # Too many instance attributes
    R0902,
    # Use of eval (needed for dynamic config)
    W0123,
    # Consider using enumerate
    C0200,
    # Unnecessary pass statement
    W0107,
    # Wrong import order (handled by isort/black)
    C0411,
    # Wrong import position
    C0413

[FORMAT]
# Maximum number of characters on a single line
max-line-length=120

# Allow the body of a class to be on the same line as the declaration
single-line-class-stmt=no

# Allow the body of an if to be on the same line as the test
single-line-if-stmt=no

[LOGGING]
# The type of string formatting that logging methods use
logging-format-style=new

[BASIC]
# Good variable names which should always be accepted
good-names=i,j,k,v,e,f,fp,id,ps,mcp,q,dt,dd,ex,_

# Include a hint for the correct naming format with invalid-name
include-naming-hint=yes

# Naming style matching correct argument names
argument-naming-style=snake_case

# Naming style matching correct attribute names
attr-naming-style=snake_case

# Naming style matching correct constant names
const-naming-style=UPPER_CASE

# Naming style matching correct function names
function-naming-style=snake_case

# Naming style matching correct method names
method-naming-style=snake_case

# Naming style matching correct module names
module-naming-style=snake_case

# Naming style matching correct variable names
variable-naming-style=snake_case

# Naming style matching correct class names
class-naming-style=PascalCase

[DESIGN]
# Maximum number of arguments for function / method
max-args=10

# Maximum number of attributes for a class
max-attributes=15

# Maximum number of boolean expressions in an if statement
max-bool-expr=5

# Maximum number of branch for function / method body
max-branches=20

# Maximum number of locals for function / method body
max-locals=25

# Maximum number of parents for a class
max-parents=7

# Maximum number of public methods for a class
max-public-methods=25

# Maximum number of return / yield for function / method body
max-returns=10

# Maximum number of statements in function / method body
max-statements=100

# Minimum number of public methods for a class
min-public-methods=0

[IMPORTS]
# Allow wildcard imports from modules
allow-wildcard-with-all=no

# Deprecated modules which should not be used
deprecated-modules=optparse,tkinter.tix

[EXCEPTIONS]
# Exceptions that will emit a warning when caught
overgeneral-exceptions=builtins.BaseException,builtins.Exception

[TYPECHECK]
# List of decorators that produce context managers
contextmanager-decorators=contextlib.contextmanager

# List of members which are set dynamically and missed by pylint inference
generated-members=

# Tells whether to warn about missing members when the owner of the attribute is inferred to be None
ignore-none=yes

# This flag controls whether pylint should warn about no-member and similar checks
ignore-on-opaque-inference=yes

# Show a hint with possible names when a member name was not found
missing-member-hint=yes

# The minimum edit distance a name should have in order to be considered a similar match
missing-member-hint-distance=1

# The total number of similar names that should be taken in consideration
missing-member-max-choices=1

[MISCELLANEOUS]
# List of note tags to take in consideration
notes=FIXME,XXX,TODO

[REFACTORING]
# Maximum number of nested blocks for function / method body
max-nested-blocks=5

# Complete the refactoring before exiting
never-returning-functions=sys.exit,argparse.parse_error

[REPORTS]
# Python expression which should return a score less than or equal to 10
evaluation=max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10))

# Template used to display messages
msg-template={path}:{line}: [{msg_id}({symbol}), {obj}] {msg}

# Set the output format
output-format=colorized

# Tells whether to display a full report or only the messages
reports=no

# Activate the evaluation score
score=yes