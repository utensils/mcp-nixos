# .github/workflows/eval-tests.yml
# Evaluation tests with Anthropic API - runs only in secure contexts

name: Evaluation Tests

on:
  # Only run on pushes to protected branches by repo owners
  push:
    branches: [main]
  # Manual trigger (requires write access)
  workflow_dispatch:
  # Schedule weekly tests to ensure continued compatibility
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday

# Prevent abuse - only run for repo members
permissions:
  contents: read

# No concurrent runs to avoid API rate limits
concurrency:
  group: eval-tests
  cancel-in-progress: false

jobs:
  eval-tests:
    name: Anthropic API Evaluation Tests
    runs-on: ubuntu-latest
    # Security: Only run for pushes by maintainers, not PRs from forks
    if: |
      github.repository == 'utensils/mcp-nixos' &&
      (github.event_name == 'push' || 
       github.event_name == 'workflow_dispatch' ||
       github.event_name == 'schedule') &&
      github.actor != 'dependabot[bot]'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            accept-flake-config = true
      
      - name: Setup environment
        run: |
          nix develop --command setup
          nix develop --command bash -c 'source .venv/bin/activate && pip install anthropic python-dotenv'
      
      - name: Run evaluation tests
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ANTHROPIC_MODEL: claude-sonnet-4-20250514
        run: |
          nix develop --command bash -c 'source .venv/bin/activate && pytest tests/test_evals_anthropic.py -v'
      
      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: eval-results
          path: |
            evaluation_report.md
            .pytest_cache/
      
      - name: Comment on commit (if failed)
        if: failure() && github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: '⚠️ Evaluation tests failed. Check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.'
            })